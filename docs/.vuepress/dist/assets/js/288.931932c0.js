(window.webpackJsonp=window.webpackJsonp||[]).push([[288],{1892:function(r,t,e){r.exports=e.p+"assets/img/image-20251006204658175.3b057245.png"},2303:function(r,t,e){"use strict";e.r(t);var a=e(18),s=Object(a.a)({},(function(){var r=this,t=r._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"论docker网桥模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#论docker网桥模式"}},[r._v("#")]),r._v(" 论docker网桥模式")]),r._v(" "),t("h2",{attrs:{id:"我的疑惑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#我的疑惑"}},[r._v("#")]),r._v(" 我的疑惑")]),r._v(" "),t("p",[r._v("docker的网桥模式原理是什么样的呢？")]),r._v(" "),t("p",[r._v("什么是网桥呢？")]),r._v(" "),t("h2",{attrs:{id:"什么是docker网桥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是docker网桥"}},[r._v("#")]),r._v(" 什么是docker网桥？")]),r._v(" "),t("p",[r._v("Docker使用Linux桥接，在宿主机虚拟一个Docker容器网桥(docker0)，Docker启动一个容器时会根据Docker网桥的网段分配给容器一个IP地址，称为Container-IP，同时Docker网桥是每个容器的默认网关。因为在同一宿主机内的容器都接入同一个网桥，这样容器之间就能够通过容器的Container-IP直接通信。")]),r._v(" "),t("p",[r._v("Docker网桥是宿主机虚拟出来的，并不是真实存在的网络设备，外部网络是无法寻址到的，这也意味着外部网络无法通过直接Container-IP访问到容器。")]),r._v(" "),t("p",[r._v("如果容器希望外部访问能够访问到，可以通过映射容器端口到宿主主机（端口映射），即docker run创建容器时候通过 -p 或 -P 参数来启用，访问容器的时候就通过[宿主机IP]:[容器端口]访问容器。")]),r._v(" "),t("p",[t("img",{attrs:{src:e(1892),alt:"image-20251006204658175"}})]),r._v(" "),t("p",[r._v("上面这张图大概是上面文字描述的理解。")]),r._v(" "),t("p",[r._v("总结：")]),r._v(" "),t("p",[r._v("网桥就相当于一个交换机。负责主机上面的全部容器通过这个交换机（网桥）连接在了一个二层网络。")]),r._v(" "),t("h2",{attrs:{id:"bridge网络模式特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bridge网络模式特点"}},[r._v("#")]),r._v(" Bridge网络模式特点")]),r._v(" "),t("p",[r._v("为每一个容器分配、设置IP。")]),r._v(" "),t("p",[r._v("将容器连接到一个docker0虚拟网桥。")]),r._v(" "),t("p",[r._v("通过docker0网桥以及Iptables nat表配置与宿主机通信。")])])}),[],!1,null,null,null);t.default=s.exports}}]);