(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{1935:function(s,t,a){"use strict";a.r(t);var n=a(18),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"解决接口幂等性问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决接口幂等性问题"}},[s._v("#")]),s._v(" 解决接口幂等性问题")]),s._v(" "),t("h2",{attrs:{id:"什么是幂等性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是幂等性"}},[s._v("#")]),s._v(" 什么是幂等性？")]),s._v(" "),t("p",[s._v("答：说白了所谓的“幂等”就是多次第意思。接口幂等性就是接口多次调用后回对系统的数据产生一定影响。")]),s._v(" "),t("p",[s._v("场景来说话：")]),s._v(" "),t("ul",[t("li",[s._v("接口超时后重试机制")]),s._v(" "),t("li",[s._v("MQ的重复消费")])]),s._v(" "),t("p",[s._v("都会带来接口幂等性的问题，下面我们介绍几种通过"),t("strong",[s._v("锁的方式")]),s._v("实现接口幂等性的方案。")]),s._v(" "),t("h2",{attrs:{id:"方式一-数据库唯一主键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方式一-数据库唯一主键"}},[s._v("#")]),s._v(" 方式一)数据库唯一主键")]),s._v(" "),t("p",[s._v("数据库唯一主键的实现原理是"),t("font",{attrs:{color:"red"}},[s._v("使用数据库中主键唯一约束的特性")]),s._v("，一般来说唯一主键比较适用于添加数据时的幂等性场景，唯一主键能保证一张表中只能存在一条该唯一主键的记录，方案的实现的流程如下图所示：")],1),s._v(" "),t("p",[t("img",{attrs:{src:a(357),alt:"image-20250530165322338"}})]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("数据库唯一主键实现接口幂等性时需要注意")]),s._v(" "),t("p",[s._v("为了保证在分布式环境下ID的全局唯一性，这里的主键一般使用分布式ID充当主键。")]),s._v(" "),t("p",[s._v("分布式id有哪几种解决方案呢？")])]),s._v(" "),t("h2",{attrs:{id:"方式二-数据库悲观锁-行锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方式二-数据库悲观锁-行锁"}},[s._v("#")]),s._v(" 方式二)数据库悲观锁[行锁]")]),s._v(" "),t("p",[s._v("实验的表数据结构：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AUTO_INCREMENT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("city_number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLLATE")]),s._v(" utf8mb4_hungarian_ci "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("datetime")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("create_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("datetime")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("idx_city_number_date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("city_number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AUTO_INCREMENT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARSET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8mb4 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLLATE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8mb4_hungarian_ci"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("数据：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'440300'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2025-05-30 00:00:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2025-04-26 10:43:50'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'440301'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2025-05-30 00:00:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2025-04-26 14:56:09'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("假设我们在连接1中(java的处理是一个请求线程)。")]),s._v(" "),t("p",[s._v("第一步：使用FOR UPDATE查询添加悲观锁。")]),s._v(" "),t("p",[s._v("第二步：这行数据被锁住了。对其进行修改操作。如：订单修改状态、用户信息对象修改用户状态。")]),s._v(" "),t("p",[s._v("第三步：模拟业务处理让起进行休眠操作。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("START")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" sun "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 睡眠50秒")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" SLEEP"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("img",{attrs:{src:a(358),alt:"image-20250530170638277"}})]),s._v(" "),t("p",[s._v("假设第二个连接：")]),s._v(" "),t("p",[s._v("进行查询操作，第一个线程没有执行完毕，无法在查询同一条id = 1的数据。这个时候查询进入阻塞状态。给用户的感觉好像是卡住了。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("START")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" sun "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("悲观锁注意点")]),s._v(" "),t("ol",[t("li",[s._v("悲观锁在同一事务操作过程中锁住了一行数据时，别的请求过来只能等待。")]),s._v(" "),t("li",[s._v("如果当前事务耗时比较长，就很影响接口性能。")]),s._v(" "),t("li",[s._v("对于Mysql数据库，要求存储引擎必须用innodb。为什么？答：因为innodb才支持事务。")]),s._v(" "),t("li",[s._v("where后面跟的查询条件字段一定要是"),t("font",{attrs:{color:"red"}},[s._v("主键")]),s._v("或者"),t("font",{attrs:{color:"red"}},[s._v("唯一索引")]),s._v("，不然会锁"),t("font",{attrs:{color:"red"}},[s._v("整张表")]),s._v("。")],1)])]),s._v(" "),t("p",[s._v("**总结：**比较好性能。单体架构可以考虑试用。")]),s._v(" "),t("h2",{attrs:{id:"方式三-数据库乐观锁-无锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方式三-数据库乐观锁-无锁"}},[s._v("#")]),s._v(" 方式三)数据库乐观锁[无锁]")]),s._v(" "),t("ul",[t("li",[s._v("什么是乐观锁？")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(359),alt:"image-20250530192648369"}})]),s._v(" "),t("p",[s._v("答：就是无锁。实现思路：cas【比较与交换】。")]),s._v(" "),t("p",[s._v('数据库乐观锁方案一般适用于执行"更新操作"的过程，我们可以提前在对应的数据表中额外添加一个字段来充当数据的版本标识。这样每次对该数据表的这条数据执行更新时，都会将该版本标识作为一个条件，值为上次待更新数据中的版本标识的值，如下图所示的：')]),s._v(" "),t("p",[t("img",{attrs:{src:a(360),alt:"image-20250530192828533"}})]),s._v(" "),t("p",[s._v("每次更新的时候，我们使用版本号来进行字段校验以及进行update更新，sql如下所示：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("version"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("version"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" version"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("多添加一个条件AND version=0进行"),t("font",{attrs:{color:"red"}},[s._v("比较")]),s._v("。")],1),s._v(" "),t("p",[s._v("在WHERE后面的条件id=123 AND version=0 被执行后，id=123的 version被更新为1，所以如果重复执行该条sql语句将不生效，因为id=123 AND version=0的数据已经不存在，通过这样方式就能保住更新的幂等，多次更新对结果不会产生影响。")]),s._v(" "),t("p",[t("strong",[s._v("为了解决的问题是：")])]),s._v(" "),t("p",[s._v("接口主要功能就是执行一条更新操作的sql语句。保证更新数据的接口多次执行后对期望结果不会产生影响。")]),s._v(" "),t("p",[s._v("概括："),t("font",{attrs:{color:"red"}},[s._v("更新接口的幂等性问题解决")]),s._v("。")],1),s._v(" "),t("h2",{attrs:{id:"方式四-状态机机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方式四-状态机机制"}},[s._v("#")]),s._v(" 方式四)状态机机制")]),s._v(" "),t("p",[s._v("在业务表中有状态的时候，如订单表中的订单状态（待提交、待支付、待发货、待收货等等）这些状态的值是有规律的，按照业务节点一级级的流转，那么我们就能利用这个特性实现接口的幂等，如下图所示的节点状态流转过程：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(361),alt:"image-20250530195309259"}})]),s._v(" "),t("p",[s._v("假如订单id为123的订单当前状态是"),t("font",{attrs:{color:"red"}},[s._v("待支付")]),s._v("，当用户支付后，订单的状态要变成待发货，更新的语句如下：")],1),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" order_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("线程T1请求时，该订单的状态是待支付（status = 1），所以该update语句可以正常更新数据，sql执行结果的影响行数是1，订单状态变成了2。")]),s._v(" "),t("p",[s._v("线程T1请求时，该订单的状态是待支付（status = 1），所以该update语句可以正常更新数据，sql执行结果的影响行数是1，订单状态变成了2。")]),s._v(" "),t("p",[s._v("线程T2相同的请求过来，再执行相同的sql时，由于订单状态变成了2，再用status=1作为条件，无法查询出需要更新的数据，所以最终sql执行结果的影响行数是0，即不会真正的更新数据。数据表记录中的状态来作为条件做更新其实跟"),t("font",{attrs:{color:"red"}},[s._v("乐观锁使用版本号类似")]),s._v("。")],1),s._v(" "),t("p",[t("strong",[s._v("总结：")])]),s._v(" "),t("p",[s._v("状态机机制的本质就是：跟"),t("font",{attrs:{color:"red"}},[s._v("乐观锁使用版本号类似")])],1),s._v(" "),t("h2",{attrs:{id:"方式五-分布式锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方式五-分布式锁"}},[s._v("#")]),s._v(" 方式五)分布式锁")]),s._v(" "),t("p",[s._v("唯一主键与乐观锁的本质是使用了数据库的锁，但由于数据库锁的性能不太好，所以我们可使用Redis、Zookeeper等中间件来实现分布式锁的功能。")]),s._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结：")]),s._v(" "),t("p",[s._v("每种幂等性实现方案都有各自的优缺点，我们需要根据实际的业务场景选择更合适的方案来解决幂等性问题。")])])}),[],!1,null,null,null);t.default=r.exports},357:function(s,t,a){s.exports=a.p+"assets/img/image-20250530165322338.1710c0f4.png"},358:function(s,t,a){s.exports=a.p+"assets/img/image-20250530170638277.19b53b74.png"},359:function(s,t,a){s.exports=a.p+"assets/img/image-20250530192648369.5ec61aa5.png"},360:function(s,t,a){s.exports=a.p+"assets/img/image-20250530192828533.2427226d.png"},361:function(s,t,a){s.exports=a.p+"assets/img/image-20250530195309259.b459a242.png"}}]);