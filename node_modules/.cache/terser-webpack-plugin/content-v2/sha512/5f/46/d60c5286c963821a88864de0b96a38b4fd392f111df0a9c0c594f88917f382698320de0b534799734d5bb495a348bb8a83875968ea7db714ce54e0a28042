{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{1261:function(s,a,t){\"use strict\";t.r(a);var n=t(14),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"实现用户登陆功能-5-7\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实现用户登陆功能-5-7\"}},[s._v(\"#\")]),s._v(\" 实现用户登陆功能[5-7]\")]),s._v(\" \"),a(\"p\",[s._v(\"我们完成了超级管理员注册流程之后，用户表中就已经有了超级管理员记录，那么接下来我们可以利用这个用户记录来完成Emos小程序的微信登陆功能。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"_01-如何判定登陆\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_01-如何判定登陆\"}},[s._v(\"#\")]),s._v(\" 01)如何判定登陆\")]),s._v(\" \"),a(\"p\",[s._v(\"用户表中并没有密码字段，我们无法根据username和password来判定用户是否可以登录。因为用户要拿着微信登陆Emos小程序，在用户表中只有 \"),a(\"font\",{attrs:{color:\"red\"}},[s._v(\"openid\")]),s._v(\" 、\"),a(\"font\",{attrs:{color:\"red\"}},[s._v(\" nickname\")]),s._v(\" 和 \"),a(\"font\",{attrs:{color:\"red\"}},[s._v(\"photo \")]),s._v(\"跟微信账号相关，我们应该如何判定用户登陆?\")],1),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:t(785),alt:\"image-20231209224153715\"}})]),s._v(\" \"),a(\"p\",[s._v(\"我们可以这样设计，用户在Emos登陆页面点击登陆按钮，然后小程序把 临时授权字符串 提交给后端Java系统。后端Java系统拿着临时授权字符串换取到 openid ，我们查询用户表中是否存在这个 openid 。如果存在，意味着该用户是已注册用户，可以登录。如果不存在，说明该用户尚未注册，目前还不是我们的员工，所以禁止登录。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"_02-编写持久层代码\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_02-编写持久层代码\"}},[s._v(\"#\")]),s._v(\" 02)编写持久层代码\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"在TbuserDao.xml 文件中，编写查询语句\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-xml line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-xml\"}},[a(\"code\",[s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"\\x3c!--  03 通过openID查询  新添加的员工id、status = 1表示在职。 --\\x3e\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[a(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"select\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token attr-name\"}},[s._v(\"id\")]),a(\"span\",{pre:!0,attrs:{class:\"token attr-value\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation attr-equals\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v('\"')]),s._v(\"searchIdByOpenId\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v('\"')])]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token attr-name\"}},[s._v(\"parameterType\")]),a(\"span\",{pre:!0,attrs:{class:\"token attr-value\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation attr-equals\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v('\"')]),s._v(\"String\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v('\"')])]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token attr-name\"}},[s._v(\"resultType\")]),a(\"span\",{pre:!0,attrs:{class:\"token attr-value\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation attr-equals\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v('\"')]),s._v(\"Integer\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v('\"')])]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n        SELECT id FROM tb_user WHERE open_id=#{openId} AND status = 1\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[a(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"select\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"ul\",[a(\"li\",[s._v(\"在TbUserDao.java 中，定义DAO方法\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-java line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 通过openid去查询 用户的记录id\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Integer\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"searchIdByOpenId\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" openId\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"_03-编写业务层代码\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_03-编写业务层代码\"}},[s._v(\"#\")]),s._v(\" 03)编写业务层代码\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"在Userservice.java 中定义抽象方法\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-java line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"/**\\n     * 用户登入的接口。\\n     * @param code 微信平台的临时授权字符串。\\n     * @return\\n     */\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Integer\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"login\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" code\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\")])]),a(\"ul\",[a(\"li\",[s._v(\"在 UserServiceImpl.java 中实现抽象方法。\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-java line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Override\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Integer\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"login\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" code\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n       \\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 第一步向微信平台获取 openid字符串。\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" openId\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getOpenId\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"code\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 用户存在。已经保存了openid，就直接返回openid。\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Integer\")]),s._v(\" id\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\"userDao\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"searchIdByOpenId\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"openId\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"id\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 用户主键值\")]),s._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 用户不存在。业务异常。\")]),s._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"throw\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"EmosException\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"帐户不存在\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" id\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\")])])])}),[],!1,null,null,null);a.default=e.exports},785:function(s,a,t){s.exports=t.p+\"assets/img/image-20231209224153715.5a09323b.png\"}}]);","extractedComments":[]}