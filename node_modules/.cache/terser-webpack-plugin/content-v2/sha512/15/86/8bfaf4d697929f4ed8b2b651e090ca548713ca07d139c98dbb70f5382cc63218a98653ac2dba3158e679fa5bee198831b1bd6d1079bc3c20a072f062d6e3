{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[267],{1808:function(t,e,n){\"use strict\";n.r(e);var s=n(17),r=Object(s.a)({},(function(){var t=this._self._c;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":this.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"泛型-extends-t-和-super-t\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#泛型-extends-t-和-super-t\"}},[this._v(\"#\")]),this._v(\" 泛型<? extends T> 和 <? super T>\")]),this._v(\"\\n<? extentds T> 和 <? super T> 是一个不容易理解的知识点，网上很多文章都是概念和内容的堆砌，看完之后反而让人更加疑惑。本文不是一蹴而就的，而是源于作者不断的思考和沉淀，力求通过简单的例子，来讲清楚这个知识点。\\n\\n## 一个模型\\n\\n为了接下来的举例说明，先构造 3 个类 `Food` 、 `Fruit` 、 `Apple` ，类之间的继承关系如下图所示：\\n\\n![image-20250425161008025](day18_2025_04_25_03.assets/image-20250425161008025.png)\\n\\n## 正确理解 <? extends T> 与 <? super T>\\n\\n对于 <? extends T> 与 <? super T> 一般解释为：\\n\\n- <? extends T> 表示对象要么是 T 类型，要么是 T 的子类；\\n- <? super T> 表示对象要么是 T 类型，要么是 T 的父类。\\n\")])}),[],!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}