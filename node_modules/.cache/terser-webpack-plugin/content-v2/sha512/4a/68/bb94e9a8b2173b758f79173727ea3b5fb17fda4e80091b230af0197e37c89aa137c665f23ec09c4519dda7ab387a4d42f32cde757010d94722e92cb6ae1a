{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{1432:function(s,t,a){\"use strict\";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"redis在springboot的使用\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redis在springboot的使用\"}},[s._v(\"#\")]),s._v(\" redis在springboot的使用\")]),s._v(\" \"),t(\"p\",[s._v(\"Spring Data Redis 提供的 Redis 操作模板（\"),t(\"code\",[s._v(\"redisTemplate\")]),s._v(\"）来进行 Redis 操作。\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"string类型必须掌握\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#string类型必须掌握\"}},[s._v(\"#\")]),s._v(\" string类型必须掌握\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"怎么添加？\")]),s._v(\" \"),t(\"li\",[s._v(\"怎么更新？\")]),s._v(\" \"),t(\"li\",[s._v(\"怎么删除？\")]),s._v(\" \"),t(\"li\",[s._v(\"怎么查看？\")])]),s._v(\" \"),t(\"p\",[s._v(\"写在基石之前。\")]),s._v(\" \"),t(\"div\",{staticClass:\"custom-block tip\"},[t(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"总结操作,必须掌握\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"使用k-v保存机制。\")])]),s._v(\" \"),t(\"p\",[s._v(\"添加：没有存在的key，就自动创建key。\")]),s._v(\" \"),t(\"p\",[s._v(\"更新：覆盖机制更新。\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"使用万能的key去操作。\")])]),s._v(\" \"),t(\"p\",[s._v(\"删除：通过key去删除。\")]),s._v(\" \"),t(\"p\",[s._v(\"查看：通过key去获取。\")])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"_01-导入相关的依赖\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_01-导入相关的依赖\"}},[s._v(\"#\")]),s._v(\" 01)导入相关的依赖\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-xml line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-xml\"}},[t(\"code\",[s._v(\"        \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"dependency\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"groupId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"org.springframework.boot\"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"groupId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"artifactId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"spring-boot-starter-data-redis\"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"artifactId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"dependency\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"dependency\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"groupId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"org.springframework.boot\"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"groupId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"artifactId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"spring-boot-starter-data-redis-reactive\"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"artifactId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"dependency\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"p\",[s._v(\"为什么要引入这二个依赖？\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"_02-springboot配置文件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_02-springboot配置文件\"}},[s._v(\"#\")]),s._v(\" 02)springboot配置文件\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-yaml line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-yaml\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"server\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"port\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"8082\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"spring\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"application\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"name\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" redisdemo01\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#Redis相关配置\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"redis\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"host\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" localhost\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"port\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6379\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#    password: xz123456    # docker默认为没有密码\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"database\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#操作的是0号数据库  有0-15个数据库，总共16个。\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"jedis\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#Redis连接池配置\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"pool\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"max-active\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"8\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#最大连接数\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"max-wait\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" 1ms \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#连接池最大阻塞等待时间\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"max-idle\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#连接池中的最大空闲连接\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"min-idle\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#连接池中的最小空闲连接\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#########################################  日志    ####################################\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"logging\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"level\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"org.springfromework.web\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" ERROR\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),t(\"br\")])]),t(\"h2\",{attrs:{id:\"_03-springboot自动装配\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_03-springboot自动装配\"}},[s._v(\"#\")]),s._v(\" 03)springboot自动装配\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Service\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"RedisService\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 只用这个对象就能满足业务的需求。\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Autowired\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"private\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"RedisTemplate\")]),t(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\" redisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"queryLowHttpTokenCache\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" redis_key \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"format\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Constants\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"REDIS_KEY_LOW_HTTP_TOKEN_CACHE\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 这个干事呢？【主要代码】 通过key获取值。\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"this\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"redisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"opsForValue\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"get\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"redis_key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\")])]),t(\"p\",[s._v(\"上面是部分代码。\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"_03-一行代码解读\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_03-一行代码解读\"}},[s._v(\"#\")]),s._v(\" 03)一行代码解读\")]),s._v(\" \"),t(\"p\",[s._v(\"redisTemplate.opsForValue().set(redis_key,status);这个是什么操作?\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[s._v(\"redisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"opsForValue\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"set\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"redis_key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"status\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"p\",[t(\"code\",[s._v(\"redisTemplate.opsForValue().set(redis_key, status)\")]),s._v(\" 是使用 Spring Data Redis 提供的 Redis 操作模板（\"),t(\"code\",[s._v(\"redisTemplate\")]),s._v(\"）来进行 Redis 操作的一行代码。\")]),s._v(\" \"),t(\"p\",[s._v(\"具体地，这行代码执行了 Redis 的 \"),t(\"code\",[s._v(\"SET\")]),s._v(\" 操作，用于将一个键值对存储到 Redis 中。让我来解释其中的参数：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"code\",[s._v(\"redis_key\")]),s._v(\": 这是要存储的键（key）。在 Redis 中，键是用来唯一标识一个存储值（value）的标识符。\")]),s._v(\" \"),t(\"li\",[t(\"code\",[s._v(\"status\")]),s._v(\": 这是要存储的值（value）。可以是任何数据类型，例如字符串、数字、对象等，根据您的需要来存储。\")])]),s._v(\" \"),t(\"div\",{staticClass:\"custom-block tip\"},[t(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"小结\")]),s._v(\" \"),t(\"p\",[s._v(\"所以，这行代码的作用是将一个键值对存储在 Redis 中，以 \"),t(\"code\",[s._v(\"redis_key\")]),s._v(\" 作为键，\"),t(\"code\",[s._v(\"status\")]),s._v(\" 作为对应的值。这是一种常见的用法，用于在 Redis 中缓存数据或存储应用程序的状态信息。后续可以使用相应的命令从 Redis 中获取或更新这个键的值。\")])]),s._v(\" \"),t(\"p\",[s._v(\"这对应redis中那个命令?\")]),s._v(\" \"),t(\"p\",[s._v(\"具体来说，它将 \"),t(\"code\",[s._v(\"redis_key\")]),s._v(\" 作为键，\"),t(\"code\",[s._v(\"status\")]),s._v(\" 作为值，使用 \"),t(\"code\",[s._v(\"SET\")]),s._v(\" 命令将这个键值对存储到 Redis 中。如果键 \"),t(\"code\",[s._v(\"redis_key\")]),s._v(\" 已经存在，那么它会覆盖已有的值。\")]),s._v(\" \"),t(\"p\",[s._v(\"在命令行中，可以使用以下方式执行相同的操作：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-cmd line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v(\"SET redis_key status\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"p\",[s._v(\"这将在 Redis 中存储键为 \"),t(\"code\",[s._v(\"redis_key\")]),s._v(\"，值为 \"),t(\"code\",[s._v(\"status\")]),s._v(\" 的键值对。\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"_04-删除redis命令\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_04-删除redis命令\"}},[s._v(\"#\")]),s._v(\" 04)删除redis命令\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"我要删除的代码与redis命令要怎么写？\")])]),s._v(\" \"),t(\"p\",[s._v(\"如果您要删除 Redis 中的键值对，您可以使用 \"),t(\"code\",[s._v(\"DEL\")]),s._v(\" 命令。在 Java 中使用 Spring Data Redis 的 \"),t(\"code\",[s._v(\"redisTemplate\")]),s._v(\"，删除一个键可以这样实现：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[s._v(\"redisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"delete\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"redis_key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"p\",[s._v(\"上述代码会删除名为 \"),t(\"code\",[s._v(\"redis_key\")]),s._v(\" 的键及其对应的值。\")]),s._v(\" \"),t(\"p\",[s._v(\"在 Redis 命令行中，您可以使用以下方式删除一个键：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-cmd line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v(\"DEL redis_key\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"p\",[s._v(\"这个命令将删除名为 \"),t(\"code\",[s._v(\"redis_key\")]),s._v(\" 的键及其对应的值。如果键不存在，命令会静默地返回，不会产生错误。\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"如果删除的key不存在代码有什么返回值吗？\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[s._v(\"    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"/**\\n     * 删除key\\n     * 删除存在的key，返回 true\\n     * 不存在的key删除，返回 false\\n     */\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Test\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"redis\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Boolean\")]),s._v(\" lyp \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" redisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"delete\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"lyp\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"out\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"println\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"删除后的返回值\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\"lyp\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\")])]),t(\"p\",[s._v(\"在 Spring Data Redis 中，当您使用 \"),t(\"code\",[s._v(\"redisTemplate.delete(redis_key)\")]),s._v(\" 删除一个不存在的键时，该方法会返回删除的键的数量，如果键不存在，则返回0。这是因为 \"),t(\"code\",[s._v(\"delete\")]),s._v(\" 方法实际上是 \"),t(\"code\",[s._v(\"DEL\")]),s._v(\" 命令的封装，而 \"),t(\"code\",[s._v(\"DEL\")]),s._v(\" 命令在 Redis 中也是这样的行为。\")]),s._v(\" \"),t(\"p\",[s._v(\"因此，如果您删除一个不存在的键，返回值将是0。如果成功删除了一个存在的键，返回值将是1，因为只有一个键被删除。\")]),s._v(\" \"),t(\"p\",[s._v(\"在代码中，您可以根据 \"),t(\"code\",[s._v(\"delete\")]),s._v(\" 方法的返回值来判断删除操作是否成功，以及删除了多少个键。例如：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[s._v(\"    \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Long\")]),s._v(\" deletedCount \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" redisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"delete\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"redis_key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"deletedCount \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"out\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"println\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"成功删除了 \"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" deletedCount \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\" 个键.\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"out\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"println\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"键不存在或未删除任何键.\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\")])]),t(\"p\",[s._v(\"这样，您可以根据返回的 \"),t(\"code\",[s._v(\"deletedCount\")]),s._v(\" 变量来确定删除操作的结果。如果 \"),t(\"code\",[s._v(\"deletedCount\")]),s._v(\" 为0，表示未删除任何键，可能是因为键不存在。如果 \"),t(\"code\",[s._v(\"deletedCount\")]),s._v(\" 大于0，表示成功删除了相应数量的键。\")]),s._v(\" \"),t(\"div\",{staticClass:\"custom-block tip\"},[t(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"删除不存在的key时注意\")]),s._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[s._v(\"不存在删除，则返回0。\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"成功删除了一个存在的键，返回值将是1。\")]),s._v(\" \"),t(\"p\",[s._v(\"为什么是1呢？\")]),s._v(\" \"),t(\"p\",[s._v(\"答：因为只有一个key被删除啊！\")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}