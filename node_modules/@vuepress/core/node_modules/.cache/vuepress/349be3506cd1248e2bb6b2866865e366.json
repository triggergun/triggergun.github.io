{"remainingRequest":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/cache-loader/dist/cjs.js??ref--3-0!/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/babel-loader/lib/index.js??ref--3-1!/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/runner/work/triggergun.github.io/triggergun.github.io/docs/基础科学/physical_base/middle_school_stage/demo01_2025_03_01.md?vue&type=template&id=a427cdf8","dependencies":[{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/docs/基础科学/physical_base/middle_school_stage/demo01_2025_03_01.md","mtime":1741006808668},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHsKICB2YXIgX3ZtID0gdGhpcywKICAgIF9jID0gX3ZtLl9zZWxmLl9jOwogIHJldHVybiBfYygnQ29udGVudFNsb3RzRGlzdHJpYnV0b3InLCB7CiAgICBhdHRyczogewogICAgICAic2xvdC1rZXkiOiBfdm0uJHBhcmVudC5zbG90S2V5CiAgICB9CiAgfSwgW19jKCdoMScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICLluLjnlKjlrprlvosiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiPluLjnlKjlrprlvosiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIOW4uOeUqOWumuW+iyIpXSksIF92bS5fdigiICIpLCBfYygnaDInLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAi5qyn5aeG5a6a5b6LIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIj5qyn5aeG5a6a5b6LIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiDmrKflp4blrprlvosiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX2MoJ2ZvbnQnLCB7CiAgICBhdHRyczogewogICAgICAiY29sb3IiOiAicmVkIgogICAgfQogIH0sIFtfdm0uX3YoIueUtemYu+S4jeWPmOeahOaDheWGteS4i++8jOeUteWOi+WSjOeUtea1geaIkOato+avlCIpXSksIF92bS5fdigi44CC5YW35L2T5YWs5byP5aaC5LiL5omA56S6OiIpXSwgMSksIF92bS5fdigiICIpLCBfYygncCcsIFtfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAia2F0ZXgtZGlzcGxheSIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImthdGV4IgogIH0sIFtfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAia2F0ZXgtbWF0aG1sIgogIH0sIFtfYygnbWF0aCcsIFtfYygnc2VtYW50aWNzJywgW19jKCdtcm93JywgW19jKCdtaScsIFtfdm0uX3YoIkkiKV0pLCBfYygnbW8nLCBbX3ZtLl92KCI9IildKSwgX2MoJ21pJywgW192bS5fdigiVSIpXSksIF9jKCdtaScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJtYXRodmFyaWFudCI6ICJub3JtYWwiCiAgICB9CiAgfSwgW192bS5fdigiLyIpXSksIF9jKCdtaScsIFtfdm0uX3YoIlIiKV0pXSwgMSksIF9jKCdhbm5vdGF0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgImVuY29kaW5nIjogImFwcGxpY2F0aW9uL3gtdGV4IgogICAgfQogIH0sIFtfdm0uX3YoIkkgPSBVL1JcbiIpXSldLCAxKV0sIDEpXSwgMSksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJrYXRleC1odG1sIiwKICAgIGF0dHJzOiB7CiAgICAgICJhcmlhLWhpZGRlbiI6ICJ0cnVlIgogICAgfQogIH0sIFtfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAic3RydXQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImhlaWdodCI6ICIwLjc1ZW0iCiAgICB9CiAgfSksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJzdHJ1dCBib3R0b20iLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImhlaWdodCI6ICIxZW0iLAogICAgICAidmVydGljYWwtYWxpZ24iOiAiLTAuMjVlbSIKICAgIH0KICB9KSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImJhc2UgZGlzcGxheXN0eWxlIHRleHRzdHlsZSB1bmNyYW1wZWQiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJtb3JkIG1hdGhpdCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAibWFyZ2luLXJpZ2h0IjogIjAuMDc4NDdlbSIKICAgIH0KICB9LCBbX3ZtLl92KCJJIildKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogIm1yZWwiCiAgfSwgW192bS5fdigiPSIpXSksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJtb3JkIG1hdGhpdCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAibWFyZ2luLXJpZ2h0IjogIjAuMTA5MDNlbSIKICAgIH0KICB9LCBbX3ZtLl92KCJVIildKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogIm1vcmQgbWF0aHJtIgogIH0sIFtfdm0uX3YoIi8iKV0pLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibW9yZCBtYXRoaXQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIm1hcmdpbi1yaWdodCI6ICIwLjAwNzczZW0iCiAgICB9CiAgfSwgW192bS5fdigiUiIpXSldKV0pXSldKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCJJIOeUtea1gSAgIOWNleS9je+8miDlronln7lBIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiVeeUteWOiyDljZXkvY3vvJrkvI/niblWIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiUueUtemYuyDljZXkvY3vvJrmrKflp4bOqSIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIuS+i+WmgjrnlLXot6/kuK3kuIDkuKrnlLXpmLtS55qE6Ziz5YC85Li6MTAwzqnvvIznlLXmupDnmoTnlLXljovkuLpVPTEyVu+8jOmCo+S5iOmAmui/h+i/meS4queUtemYu+eahOeUtea1gUnmmK/lpJrlsJE/IildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiLi9kZW1vMDFfMjAyNV8wM18wMS5hc3NldHMvaW1hZ2UtMjAyNTAzMDExMjEzMTI1OTMucG5nIiksCiAgICAgICJhbHQiOiAiaW1hZ2UtMjAyNTAzMDExMjEzMTI1OTMiCiAgICB9CiAgfSldKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigi55S15rWBICBJPSAgVSAvIFIgID0gICAgIDEyICAvICAxMDAgICA9ICAgMC4xMiBBKOWuieWfuSkiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gyJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogIueUteWKn+eOhyIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI+eUteWKn+eOhyIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIg55S15Yqf546HIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigi5oyH55S15rWB5Zyo5Y2V5L2N5pe26Ze05YaF5YGa55qE5Yqf77yM5piv55So5p2l6KGo56S6IiksIF9jKCdmb250JywgewogICAgYXR0cnM6IHsKICAgICAgImNvbG9yIjogInJlZCIKICAgIH0KICB9LCBbX3ZtLl92KCLmtojogJfnlLXog73nmoTlv6vmhaIiKV0pLCBfdm0uX3YoIueahOeJqeeQhumHjyIpXSwgMSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIueUtei3r+S4reWFg+WZqOS7tueahOW3peS9nOWKn+eOh+iuoeeul+WFrOW8j+WmguS4i++8miIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIlUg77yaIOS8j+eJuSBWIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiSSDvvJog5a6J5Z+5IEEiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCJQIO+8miDnk6bniblXIOOAgUtXIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJrYXRleC1kaXNwbGF5IgogIH0sIFtfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAia2F0ZXgiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJrYXRleC1tYXRobWwiCiAgfSwgW19jKCdtYXRoJywgW19jKCdzZW1hbnRpY3MnLCBbX2MoJ21yb3cnLCBbX2MoJ21pJywgW192bS5fdigiUCIpXSksIF9jKCdtbycsIFtfdm0uX3YoIj0iKV0pLCBfYygnbWknLCBbX3ZtLl92KCJVIildKSwgX2MoJ21vJywgW192bS5fdigi4oiXIildKSwgX2MoJ21pJywgW192bS5fdigiSSIpXSldLCAxKSwgX2MoJ2Fubm90YXRpb24nLCB7CiAgICBhdHRyczogewogICAgICAiZW5jb2RpbmciOiAiYXBwbGljYXRpb24veC10ZXgiCiAgICB9CiAgfSwgW192bS5fdigiUCA9IFUgKiBJXG4iKV0pXSwgMSldLCAxKV0sIDEpLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAia2F0ZXgtaHRtbCIsCiAgICBhdHRyczogewogICAgICAiYXJpYS1oaWRkZW4iOiAidHJ1ZSIKICAgIH0KICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogInN0cnV0IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJoZWlnaHQiOiAiMC42ODMzM2VtIgogICAgfQogIH0pLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAic3RydXQgYm90dG9tIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJoZWlnaHQiOiAiMC42ODMzM2VtIiwKICAgICAgInZlcnRpY2FsLWFsaWduIjogIjBlbSIKICAgIH0KICB9KSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImJhc2UgZGlzcGxheXN0eWxlIHRleHRzdHlsZSB1bmNyYW1wZWQiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJtb3JkIG1hdGhpdCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAibWFyZ2luLXJpZ2h0IjogIjAuMTM4ODllbSIKICAgIH0KICB9LCBbX3ZtLl92KCJQIildKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogIm1yZWwiCiAgfSwgW192bS5fdigiPSIpXSksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJtb3JkIG1hdGhpdCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAibWFyZ2luLXJpZ2h0IjogIjAuMTA5MDNlbSIKICAgIH0KICB9LCBbX3ZtLl92KCJVIildKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogIm1iaW4iCiAgfSwgW192bS5fdigi4oiXIildKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogIm1vcmQgbWF0aGl0IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJtYXJnaW4tcmlnaHQiOiAiMC4wNzg0N2VtIgogICAgfQogIH0sIFtfdm0uX3YoIkkiKV0pXSldKV0pXSldKSwgX3ZtLl92KCIgIiksIF9jKCdoMicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICLnhKbogLPlrprlvosiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiPnhKbogLPlrprlvosiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIOeEpuiAs+WumuW+iyIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfYygnZm9udCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xvciI6ICJyZWQiCiAgICB9CiAgfSwgW192bS5fdigi55S15rWB6YCa6L+H5a+85L2T5Lqn55Sf55qE54Ot6YePIildKSwgX3ZtLl92KCLot5/nlLXmtYHnmoTkuozmrKHmlrnmiJDmraPmr5TvvIzot5/lr7zkvZPnmoTnlLXpmLvmiJDmraPmr5TvvIzot5/pgJrnlLXml7bpl7TmiJDmraPmr5TjgIJcbuWFrOW8j+WmguS4izoiKV0sIDEpLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImthdGV4LWRpc3BsYXkiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJrYXRleCIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImthdGV4LW1hdGhtbCIKICB9LCBbX2MoJ21hdGgnLCBbX2MoJ3NlbWFudGljcycsIFtfYygnbXJvdycsIFtfYygnbWknLCBbX3ZtLl92KCJRIildKSwgX2MoJ21vJywgW192bS5fdigiPSIpXSksIF9jKCdtc3VwJywgW19jKCdtaScsIFtfdm0uX3YoIkkiKV0pLCBfYygnbW4nLCBbX3ZtLl92KCIyIildKV0sIDEpLCBfYygnbW8nLCBbX3ZtLl92KCLiiJciKV0pLCBfYygnbWknLCBbX3ZtLl92KCJSIildKSwgX2MoJ21vJywgW192bS5fdigi4oiXIildKSwgX2MoJ21pJywgW192bS5fdigidCIpXSldLCAxKSwgX2MoJ2Fubm90YXRpb24nLCB7CiAgICBhdHRyczogewogICAgICAiZW5jb2RpbmciOiAiYXBwbGljYXRpb24veC10ZXgiCiAgICB9CiAgfSwgW192bS5fdigiUSA9IEleMiAqIFIgKiB0XG4iKV0pXSwgMSldLCAxKV0sIDEpLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAia2F0ZXgtaHRtbCIsCiAgICBhdHRyczogewogICAgICAiYXJpYS1oaWRkZW4iOiAidHJ1ZSIKICAgIH0KICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogInN0cnV0IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJoZWlnaHQiOiAiMC44NjQxMDc5OTk5OTk5OTk5ZW0iCiAgICB9CiAgfSksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJzdHJ1dCBib3R0b20iLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImhlaWdodCI6ICIxLjA1ODU0Nzk5OTk5OTk5OThlbSIsCiAgICAgICJ2ZXJ0aWNhbC1hbGlnbiI6ICItMC4xOTQ0NGVtIgogICAgfQogIH0pLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAiYmFzZSBkaXNwbGF5c3R5bGUgdGV4dHN0eWxlIHVuY3JhbXBlZCIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogIm1vcmQgbWF0aGl0IgogIH0sIFtfdm0uX3YoIlEiKV0pLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibXJlbCIKICB9LCBbX3ZtLl92KCI9IildKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogIm1vcmQiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJtb3JkIG1hdGhpdCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAibWFyZ2luLXJpZ2h0IjogIjAuMDc4NDdlbSIKICAgIH0KICB9LCBbX3ZtLl92KCJJIildKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogInZsaXN0IgogIH0sIFtfYygnc3BhbicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJ0b3AiOiAiLTAuNDEzZW0iLAogICAgICAibWFyZ2luLXJpZ2h0IjogIjAuMDVlbSIKICAgIH0KICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImZvbnRzaXplLWVuc3VyZXIgcmVzZXQtc2l6ZTUgc2l6ZTUiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIwZW0iCiAgICB9CiAgfSwgW192bS5fdigi4oCLIildKV0pLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAicmVzZXQtdGV4dHN0eWxlIHNjcmlwdHN0eWxlIHVuY3JhbXBlZCIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogIm1vcmQgbWF0aHJtIgogIH0sIFtfdm0uX3YoIjIiKV0pXSldKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImJhc2VsaW5lLWZpeCIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImZvbnRzaXplLWVuc3VyZXIgcmVzZXQtc2l6ZTUgc2l6ZTUiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIwZW0iCiAgICB9CiAgfSwgW192bS5fdigi4oCLIildKV0pLCBfdm0uX3YoIuKAiyIpXSldKV0pLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibWJpbiIKICB9LCBbX3ZtLl92KCLiiJciKV0pLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibW9yZCBtYXRoaXQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIm1hcmdpbi1yaWdodCI6ICIwLjAwNzczZW0iCiAgICB9CiAgfSwgW192bS5fdigiUiIpXSksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJtYmluIgogIH0sIFtfdm0uX3YoIuKIlyIpXSksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJtb3JkIG1hdGhpdCIKICB9LCBbX3ZtLl92KCJ0IildKV0pXSldKV0pXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIkk6IOWuieWfuShBKVxuUjog5qyn5aeGKDIpXG50OiDml7bpl7QocylcblE6IOiDvemHjyDvvIhK77yJIildKSwgX3ZtLl92KCJcbnA9Rl4yKlI65Yqf546HKFcpUTrog73ph48oSilcblxuIiksIF9jKCdwJywgW192bS5fdigi55S16Lev6YCa6L+H5a+85L2T5pe277yM5aaC5p6c55S16IO95YWo6YOo6L2s5YyW5Li65YaF6IO977yM6ICM5rKh5pyJ5ZCM5pe26L2s5YyW5Li65YW25LuW5b2i5byP55qE6IO96YeP77yM6YKj5LmI55S15rWB5Lqn55Sf55qE54Ot6YePT+WwseetieS6jua2iOiAl+eahOeUteiDvVfvvIzljbNPLVc9VUl0XG7kvovlpoLvvIzkuIDmoLk2MFHnmoTnlLXpmLvkuJ3mjqXlnKgzNlbnmoTnlLXmupDkuKTnq6/vvIzlnKg1bWlu5YaF5YWx5Lqn55Sf5aSa5bCR54Ot6YeP44CCIildKSwgX3ZtLl92KCJcbkkgPSBVL1IgPSAzNlYvNjDOqSA9IDAuNkFcblxuUD1JKkkqUip0ICA9MC42QSAqIDAuNkEgKiA2MM6pICogNSAqIDYwcyAgPSAgNjQ4MEpcblxuIildKTsKfTsKdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdOwpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Ow=="},null]}