{"remainingRequest":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/cache-loader/dist/cjs.js??ref--3-0!/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/babel-loader/lib/index.js??ref--3-1!/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/runner/work/triggergun.github.io/triggergun.github.io/docs/lyp/python/jupyter/demo01_2025_03_19_02.md?vue&type=template&id=4b9dbf4e","dependencies":[{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/docs/lyp/python/jupyter/demo01_2025_03_19_02.md","mtime":1742359475248},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/triggergun.github.io/triggergun.github.io/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}